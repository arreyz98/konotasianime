generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now())
  password  String
  posts     Post[]
}

model Post {
  id          String       @id @default(uuid())
  title       String
  slug        String       @unique
  deskripsi   String
  release     String
  imagePoster String
  imageBanner String
  source      String[]
  userId      String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  isFeatured  Boolean      @default(false)
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  genres      PostGenre[]
  studios     PostStudio[]
  postVideos  PostVideo[]
}

model PostVideo {
  id        String   @id @default(uuid())
  title     String
  deskripsi String
  linkVideo String
  duration  String
  episode   Int
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Genre {
  id    String      @id @default(uuid())
  name  String
  posts PostGenre[]
}

model Studio {
  id    String       @id @default(uuid())
  name  String
  posts PostStudio[]
}

model PostGenre {
  postId  String
  genreId String
  genre   Genre  @relation(fields: [genreId], references: [id], onDelete: Cascade)
  post    Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@id([postId, genreId])
}

model PostStudio {
  postId   String
  studioId String
  post     Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  studio   Studio @relation(fields: [studioId], references: [id], onDelete: Cascade)

  @@id([postId, studioId])
}
